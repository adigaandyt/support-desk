const jwt = require('jsonwebtoken')
const asyncHandler = require('express-async-handler')
const User = require('../models/userModel')

const protect = asyncHandler(async(req,res,next)=>{
    let token // init a token variable

    if(req.headers.authorization && req.headers.authorization.startsWith('Bearer')){
        try {
            const auth = req.headers.authorization.toString()
            token = auth.split(' ')[1] // The token is sent as Bearer [token] so we split
            //Verify token
            const decoded = jwt.verify(token,process.env.JWT_SECRET)
            //After decoding token get ID from token
            //We set the requester user by ID not including passwrd
            //we later put the info in user in getMe func
            req.user = await User.findById(decoded.id).select('-password')

            next()
        } catch (error) {
            console.log(error)
            res.status(401)
            throw new Error('error authorizing')
        }
    }
    if(!token){
        res.status(401)
        throw new Error('Not authorized')
    }
})

module.exports = {protect}